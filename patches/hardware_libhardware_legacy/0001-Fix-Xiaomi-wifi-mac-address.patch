From a8ccabdc4f7ebe530306e645ffea6629199ea066 Mon Sep 17 00:00:00 2001
From: Keyur Maru <kd2maru@gmail.com>
Date: Fri, 2 Jan 2015 14:06:34 +0530
Subject: [PATCH] Use patch (instead of fork) to fix wifi mac address

---
 wifi/Android.mk |  5 +++++
 wifi/wifi.c     | 30 ++++++++++++++++++++++++++++++
 2 files changed, 35 insertions(+)

diff --git a/wifi/Android.mk b/wifi/Android.mk
index ad9f2c9..cf1f72d 100644
--- a/wifi/Android.mk
+++ b/wifi/Android.mk
@@ -48,4 +48,9 @@ ifeq ($(BOARD_HAVE_SAMSUNG_WIFI),true)
 LOCAL_CFLAGS += -DSAMSUNG_WIFI
 endif
 
+ifeq ($(BOARD_HAVE_XIAOMI_WIFI),true)
+LOCAL_CFLAGS += -DXIAOMI_WIFI
+LOCAL_SHARED_LIBRARIES += libqminvapi
+endif
+
 LOCAL_SHARED_LIBRARIES += libnetutils
diff --git a/wifi/wifi.c b/wifi/wifi.c
index 5a19f5b..f11b273 100644
--- a/wifi/wifi.c
+++ b/wifi/wifi.c
@@ -167,6 +167,12 @@ static char supplicant_name[PROPERTY_VALUE_MAX];
 /* Is either SUPP_PROP_NAME or P2P_PROP_NAME */
 static char supplicant_prop_name[PROPERTY_KEY_MAX];
 
+#ifdef XIAOMI_WIFI
+extern int qmi_nv_read_wlan_mac(char** mac);
+static unsigned char wlan_addr[] = { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, };
+static char wcn_mac_arg[120];
+static int read_mac_ok = 0;
+#endif
 
 #ifdef SAMSUNG_WIFI
 char* get_samsung_wifi_type()
@@ -317,8 +323,14 @@ int wifi_load_driver()
     usleep(200000);
 #endif
 
+#ifdef XIAOMI_WIFI
+    if (0 == read_mac_ok)
+        read_wlan_mac_addr();
+    if (insmod(DRIVER_MODULE_PATH, wcn_mac_arg) < 0) {
+#else
     if (insmod(DRIVER_MODULE_PATH, DRIVER_MODULE_ARG) < 0) {
 #endif
+#endif
 
 #ifdef WIFI_EXT_MODULE_NAME
         rmmod(EXT_MODULE_NAME);
@@ -1132,3 +1144,21 @@ int wifi_set_mode(int mode) {
     wifi_mode = mode;
     return 0;
 }
+
+#ifdef XIAOMI_WIFI
+int read_wlan_mac_addr()
+{
+    char* nv_wlan_mac = NULL;
+    ALOGV("read wlan mac addr enter.");
+    qmi_nv_read_wlan_mac(&nv_wlan_mac);
+    int i;
+    for (i=0; i<6; i++) {
+        wlan_addr[i] = nv_wlan_mac[i];
+    }
+    memset(wcn_mac_arg, 0, sizeof(wcn_mac_arg));
+    sprintf(wcn_mac_arg, "mac=0x%02x,0x%02x,0x%02x,0x%02x,0x%02x,0x%02x", wlan_addr[5], wlan_addr[4], wlan_addr[3], wlan_addr[2],wlan_addr[1],wlan_addr[0]);
+    read_mac_ok = 1;
+    ALOGV("read wlan mac addr (%s) done.", wcn_mac_arg);
+    return 0;
+}
+#endif
